<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Sens">


    <!-- Panel buttons -->
    <Style TargetType="{x:Type Button}" x:Key="PanelButtons" >
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource windowPanelIconsBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.6"/>

            </Setter.Value>
            
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelButtonBackgroundHoverBrush}"/>
                <Setter Property="FontWeight" Value="ExtraBold"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    
    <!-- Panel Close Button -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PanelButtons}" x:Key="CloseButton">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
                <Setter Property="FontWeight" Value="ExtraBold"/>
                <Setter Property="Foreground" Value="White"/>

            </Trigger>
        </Style.Triggers>
        
    </Style>
    
    <!-- Navigation Buttons Unselected-->
    <Style TargetType="{x:Type Button}" x:Key="NavigationButtons">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitMedium}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="Foreground" Value="{StaticResource defaultButtonsBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>

    </Style>

    <!-- Seperate style for each navigation button because of some incompability between a Textblock in a Button in a Viewbox and -->    
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NavigationButtons}" x:Key="HomeButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}">
                            <!--<TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HomeButtonUnderline}" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>-->
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NavigationButtons}" x:Key="CalculatorButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}">
                            <!--<TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CalculatorButtonUnderline}" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>-->
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NavigationButtons}" x:Key="MyProfilesButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}">
                            <!--<TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MyProfilesButtonUnderline}" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>-->
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NavigationButtons}" x:Key="TutorialsButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}">
                            <!--<TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TutorialsButtonUnderline}" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>-->
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NavigationButtons}" x:Key="SettingsButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}">
                            <!--<TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SettingsButtonUnderline}" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>-->
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NavigationButtons}" x:Key="FeedbackButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}">
                            <!--<TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding FeedbackButtonUnderline}" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>-->
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- NewsFeed Back Forward Buttons (default)-->
    <Style TargetType="{x:Type Button}" x:Key="NewsFeedUnselectableNavButton">
        
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource defaultButtonsBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PaperCutoutNav}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="35"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- NewsFeed Back Forward Buttons (unselectable)-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NewsFeedUnselectableNavButton}" x:Key="NewsFeedNavButton">
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>
    
    <!--  MY PROFILES  -->
    
    <!-- SpeedDials for MyProfiles-->
    <Style TargetType="{x:Type Button}" x:Key="SpeedDial">
                
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}"  BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Custom button template for new speed dial (border conflicts with viewbox) -->
    <Style TargetType="{x:Type Button}" x:Key="SpeedDialTemplate">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- New Speed Dial (+) -->
    <Style TargetType="Button" x:Key="NewSpeedDial" BasedOn="{StaticResource SpeedDialTemplate}">
        <Setter Property="Background" Value="{StaticResource eightBrush}"/>
        <Setter Property="Border.CornerRadius" Value="7" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource sevenBrush}"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>

    <!-- Close button for Speed Dial (one style for each close button because 'ElementName' forces one to one relationship between Grid and the button)-->
    <Style TargetType="{x:Type Button}" x:Key="CloseSpeedDial1">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="0.5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource hoverOverCloseBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial1}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseSpeedDial2">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="0.5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource hoverOverCloseBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial2}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseSpeedDial3">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="0.5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource hoverOverCloseBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial3}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseSpeedDial4">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="0.5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource hoverOverCloseBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial4}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseSpeedDial5">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="0.5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource hoverOverCloseBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial5}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseSpeedDial6">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="0.5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource hoverOverCloseBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial6}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseSpeedDial7">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="0.5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource hoverOverCloseBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial7}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseSpeedDial8">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="0.5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource hoverOverCloseBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial8}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseSpeedDial9">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitExtraLight}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource closeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="0.5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="#ccc" BorderThickness="0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource hoverOverCloseBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial9}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    

    <!-- Speed Dials default buttons (Apply, Edit, Email) (one style for each dial because 'ElementName' forces one to one relationship between Grid and the 3 buttons-->
    <Style TargetType="{x:Type Button}" x:Key="SpeedDialOne">
        
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Border.CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="5"/>
        <Setter Property="Visibility" Value="Hidden"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource nineBrush}" BorderThickness="0.5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Button.Opacity" Value="0.75"/>
            </Trigger>

            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial1}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SpeedDialTwo">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Border.CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource nineBrush}" BorderThickness="0.5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Button.Opacity" Value="0.75"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial2}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SpeedDialThree">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Border.CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource nineBrush}" BorderThickness="0.5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Button.Opacity" Value="0.75"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial3}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SpeedDialFour">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Border.CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource nineBrush}" BorderThickness="0.5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Button.Opacity" Value="0.75"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial4}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SpeedDialFive">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Border.CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource nineBrush}" BorderThickness="0.5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Button.Opacity" Value="0.75"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial5}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SpeedDialSix">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Border.CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource nineBrush}" BorderThickness="0.5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Button.Opacity" Value="0.75"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial6}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SpeedDialSeven">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Border.CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource nineBrush}" BorderThickness="0.5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Button.Opacity" Value="0.75"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial7}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SpeedDialEight">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Border.CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource nineBrush}" BorderThickness="0.5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Button.Opacity" Value="0.75"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial8}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SpeedDialNine">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Border.CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource KanitSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="5"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource nineBrush}" BorderThickness="0.5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Button.Opacity" Value="0.75"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SpeedDial9}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Choose File button -->
    <Style TargetType="{x:Type Button}" x:Key="ChooseFile">
        <Setter Property="FontFamily" Value="{StaticResource KanitLight}"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Background" Value="{StaticResource twoBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource sevenBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Save + Cancel button -->
    <Style TargetType="{x:Type Button}" x:Key="CustomProfileSaveCancel">
        <Setter Property="FontFamily" Value="{StaticResource KanitLight}"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Background" Value="{StaticResource buttonCyanBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource nineBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource speedDial1Brush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>